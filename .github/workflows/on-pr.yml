name: Run Tests and Lint on PR

on:
  pull_request:
    branches:
      - main  # Adjust if needed, e.g., "develop"
      - dev

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Ensures your code is available

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Adjust based on your project

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile  # Ensures package versions are consistent

      - name: Run lint
        run: yarn lint
    
  format:
    name: Check Code Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Prettier Check
        run: yarn prettier --check .

  audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Yarn Audit
        run: yarn audit --level high || echo "No high severity vulnerabilities found"
        
  test:
    name: Tests
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Ensures your code is available

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Adjust based on your project

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile  # Ensures package versions are consistent

      - name: Run tests
        run: yarn test
  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Ensures your code is available

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Adjust based on your project

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile  # Ensures package versions are consistent

      - name: Build Next.js app
        run: yarn web:build # This ensures a production build exists

      - name: Start Next.js server in the background
        run: yarn web:start & # Starts the server in the background

      - name: Run Puppeteer tests
        run: yarn e2e

      - name: Stop Next.js server
        run: pkill -f "next start"

